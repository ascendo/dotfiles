presets:
  global:
    cookies: ~/.flexget/private/cookies.sqlite
    download: ~/Downloads/.

  torrents:
    regexp:
      reject:
        - '(?x) [\W_] nuked (?:_|\b)'
      from: title
    content_filter:
      reject: [ '*.m4v', '*.wmv' ]
    torrent_scrub: on
    torrent_alive: 5
    exec:
      on_output:
        for_accepted: |
          growlnotify -t 'FlexGet: torrent from {{feed}}' -m \
            '{{ title | re_replace("['']", "") }}' >/dev/null 2>&1
          tmux display-message 'FlexGet: {{feed}}: {{
            title | re_replace("['']", "") }}' >/dev/null 2>&1
        phase: |
          # This is also run from cron every few minutes.
          nice -n 20 transmission-watchdog

  tv:
    content_size:
      min: 50
      max: 1500
    manipulate:
      # Recognize the quality of a particular ripper.
      - title:
          replace:
            regexp: (?i)ws\.xvid-err0001
            format: hdtv
      # Clean description field to avoid false matches from series plugin.
      - description: { from: title }
      - description: { extract: '' }

  tv-series:
    series:
      settings:
        tv:
          min_quality: dsr
          max_quality: bdrip
          path: ~/Media/TV/{{series_name}}/.
          propers: 3 hours
        documentaries:
          min_quality: dsr
          max_quality: bdrip
          path: ~/Media/TV/Documentaries/{{series_name}}/.
          propers: 3 hours
        talk_shows:
          min_quality: dsr
          max_quality: bdrip
          path: ~/Media/TV/Talk Shows/{{series_name}}/.
          propers: 3 hours
    include: [ private/series.yml ]
    # Reject season previews or recaps.
    if: [ '1 < series_season and 0 == series_episode': reject ]

  # Grab the first episode of any new series.
  tv-premieres:
    series_premiere:
      min_quality: dsr
      max_quality: dvdrip
      path: ~/Media/TV/_NEW_/.
      propers: no
      allow_seasonless: yes
    regexp:
      reject:
        - '(?x) [\W_] \d{4} (\W*) \d{2} \1 \d{2} .*? (?:_|\b) part'
        - '(?x) [\W_] (?: pdtv | au | sports | ufc ) (?:_|\b)'
        - '(?x) [\W_] brit(?: ish | ain | annia )'
      from: title

  movies:
    interval: 30 minutes
    quality: { min: hdtv, max: bdrip }
    regexp:
      reject:
        - '(?x) [\W_] read[\W_]*nfo (?:_|\b)':             { from: title }
        - '(?x) [\W_] 3-?D(?:BD)? (?:_|\b)':               { from: title }
        - '(?x) [\W_] (?: heb | kor | swe ) sub (?:_|\b)': { from: title }
        - '(?x) [\W_] (?: dubbed | pldub | hardcoded | hardsubs? ) (?:_|\b)':
            from: [ title, description ]
    content_size:
      min: 650
      max: 1750
    seen_movies: strict
    imdb_required: yes
    # Run before if, which has a priority of 80.
    plugin_priority: { imdb_required: 81 }
    if:
      - "'english' == (imdb_languages or ['english'])[0]":
          set: { path: ~/Media/Movies/. }
          imdb: { min_score: 6.2, min_votes: 500 }
      - "'documentary' in imdb_genres":
          set: { path: ~/Media/Movies/Documentaries/. }
      - "'english' != (imdb_languages or ['english'])[0]":
          set: { path: ~/Media/Movies/Foreign/. }
          imdb:
            min_score: 6.8
            min_votes: 100
            accept_languages: [
              cantonese, danish, dutch, french, german, italian, japanese,
              korean, mandarin, portuguese, spanish ]
          regexp:
            reject_excluding:
              - '(?x) ^ (?: action | adventure | comedy | crime | mystery
                          | sci-fi | thriller | war ) $'
            from: imdb_genres
      - 'imdb_year < now.year - 6': reject
      - "['music'] == imdb_genres": reject
      - "['biography', 'music'] == imdb_genres": reject
      - "['biography', 'documentary', 'music'] == imdb_genres": reject
      - "['documentary', 'music'] == imdb_genres": reject
      - "'musical' in imdb_genres": reject
      # Probably a standup comedy.
      - "'comedy' in imdb_genres and 1 == len(imdb_actors)": reject

feeds:
  ###########
  # TV series
  ###########
  eztv:
    priority: 1
    interval: 5 minutes
    rss:
      url: http://ezrss.it/feed/
      silent: yes
    preset: [ torrents, tv, tv-series ]
  btn:
    priority: 2
    interval: 5 minutes
    include: [ private/btn-rss.yml ]
    preset: [ torrents, tv, tv-series ]
    manipulate:
      # Use the scene release name.
      - title: { extract: '\[ ([^]]+) \] *$' }
  torrentday_tv:
    priority: 3
    interval: 5 minutes
    include: [ private/torrentday_tv-rss.yml ]
    preset: [ torrents, tv, tv-series ]
  thebox:
    # Ratio-based tracker; easy to maintain. UK content.
    priority: 4
    interval: 15 minutes
    rss:
      url: http://thebox.bz/rss.php?feed=dl&cat[]=14&cat[]=18&cat[]=31&cat[]=8
      silent: yes
    preset: [ torrents, tv, tv-series ]
    disable_plugin: [ torrent_alive ]
    if: [ "str(now.year) + ')' not in title": reject ]
  bitmetv:
    # Ratio-based tracker; hard to maintain.
    priority: 6
    interval: 5 minutes
    delay: 10 minutes
    include: [ private/bitmetv-rss.yml ]
    preset: [ torrents, tv, tv-series ]

  #####################
  # TV series premieres
  #####################
  btn_premieres:
    priority: 22
    interval: 5 minutes
    include: [ private/btn-rss.yml ]
    preset: [ torrents, tv, tv-premieres ]
    manipulate:
      # Use the scene release name.
      - title:
          replace:
            regexp: '^[^[]+\[ (\d+) \].*?\[ ([^]]+) \] *$'
            format: '\2 \1'
    if: [ "not title.endswith(str(now.year))": reject ]
  torrentday_tv_premieres:
    priority: 23
    interval: 5 minutes
    include: [ private/torrentday_tv-rss.yml ]
    preset: [ torrents, tv, tv-premieres ]

  ########
  # Movies
  ########
  xspeeds_movies:
    priority: 31
    include: [ private/xspeeds_movies-rss.yml ]
    preset: [ torrents, movies ]
  ilt_movies:
    priority: 32
    include: [ private/ilt_movies-rss.yml ]
    preset: [ torrents, movies ]
  torrentday_movies:
    priority: 33
    include: [ private/torrentday_movies-rss.yml ]
    preset: [ torrents, movies ]
  rlslog_movies:
    priority: 34
    rlslog: http://www.rlslog.net/category/movies/
    preset: [ torrents, movies ]
  # Foreign: AsiaTorrents.com and EUTorrents.com
  avistaz:
    priority: 35
    sequence:
      - rss: { url: 'http://feeds.feedburner.com/eutorrentsbt', silent: yes }
      - rss: { url: 'http://feeds.feedburner.com/btavistaz',    silent: yes }
    preset: [ torrents, movies ]
    urlrewrite:
      site:
        regexp: '(?x) ^ http:// (?P<host>[^/]+) .*? &id= (?P<id>[^&]+)'
        format: 'http://\g<host>/download.php?id=\g<id>&f=\g<id>.torrent'
    regexp:
      reject_excluding: [ '(?x) \b english \b' ]
      reject: [ '(?x) \b dubbed \b' ]
      from: description
