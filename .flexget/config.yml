presets:
  global:
    download: ~/Downloads/.

  movies:
    interval: 30 minutes
    quality:
      max: bdrip
      min: r5
    regexp:
      reject:
        - '[\W_]read[\W_]*nfo(?:_|\b)'
        - '[\W_]3-?D(?:BD)?(?:_|\b)'
        - '[\W_]ppv(?:-?rip)?(?:_|\b)'
      from: title
    content_size:
      min: 650
      max: 1750
    seen_movies: strict
    imdb_required: yes
    imdb:
      min_score: 6.2
      min_votes: 100
      accept_languages: [
        cantonese, danish, dutch, english, french, german, italian,
        japanese, korean, mandarin, portuguese, spanish
      ]
      reject_genres: [ musical ]
    if:
      - 'imdb_year < now.year - 6': reject
      - quality == 'r5':
          regexp:
            reject: [ '[\W_](?:cam|mic|line|russian)(?:_|\b)' ]
            from: title
      - 'True':
          set: { path: ~/Media/Movies/. }
      - "'documentary' in imdb_genres":
          set: { path: ~/Media/Movies/Documentaries/. }
      - imdb_languages and 'english' != imdb_languages[0]:
          regexp:
            reject_excluding:
              - 'action|adventure|comedy|crime|mystery|sci_fi|thriller|war'
            from: imdb_genres
          set: { path: ~/Media/Movies/Foreign/. }

  tv:
    content_size: { max: 1500 }
    manipulate:
      # Recognize webrip quality.
      - title:
          replace:
            regexp: (?i)webrip
            format: dsr
      # Recognize the quality of a particular ripper.
      - title:
          replace:
            regexp: (?i)ws\.xvid-err0001
            format: hdtv
      # Clean description field to avoid false matches from series plugin.
      - description: { from: title }
      - description: { extract: '' }

  tv-series:
    series:
      settings:
        tv:
          min_quality: dsr
          max_quality: bdrip
          path: ~/Media/TV/{{series_name}}/.
          propers: 3 hours
        documentaries:
          min_quality: dsr
          max_quality: bdrip
          path: ~/Media/TV/Documentaries/{{series_name}}/.
          propers: 3 hours
        talk_shows:
          min_quality: dsr
          max_quality: bdrip
          path: ~/Media/TV/Talk Shows/{{series_name}}/.
          propers: 3 hours
    include: [ private/series.yml ]
    # Reject season previews or recaps.
    if: [ series_episode == 0: reject ]

  # Grab the first episode of any new series.
  tv-premieres:
    series_premiere:
      min_quality: dsr
      max_quality: dvdrip
      path: ~/Media/TV/_NEW_/.
      propers: no
    include: [ private/series_premiere.yml ]

  torrents:
    regexp:
      reject:
        - '[\W_]+(?:[hx][.-]?264|nuked)(?:_|\b)'
      from: title
    content_filter:
      reject: [ '*.m[4k]v', '*.mp4', '*.wmv' ]
    torrent_scrub: on
    torrent_alive: 5
    exec:
      auto_escape: yes
      on_output:
        for_accepted: |
          growlnotify -t FlexGet:\ torrent\ from\ {{feed}} -m {{title}} \
            >/dev/null 2>&1
        phase: |
          # This is also run from cron every few minutes.
          nice -n 20 transmission-watchdog

feeds:
  ###########
  # TV series
  ###########
  eztv:
    priority: 1
    interval: 5 minutes
    rss:
      url: http://ezrss.it/feed/
      silent: yes
    preset: [ torrents, tv, tv-series ]
  btn:
    priority: 2
    interval: 5 minutes
    include: [ private/btn-rss.yml ]
    preset: [ torrents, tv, tv-series ]
    # Use the scene release name.
    manipulate:
      - title: { extract: '\[ ([^]]+) \] *$' }
  tvt:
    # Ratio-based tracker; not easy to maintain.
    priority: 3
    interval: 5 minutes
    include: [ private/tvt-rss.yml ]
    preset: [ torrents, tv, tv-series ]
  torrentvault_tv:
    priority: 5
    interval: 5 minutes
    include: [ private/torrentvault_tv-rss.yml ]
    preset: [ torrents, tv, tv-series ]
  thebox:
    # Ratio-based tracker; easy to maintain. UK content.
    priority: 6
    interval: 15 minutes
    include: [ private/thebox-rss.yml ]
    preset: [ torrents, tv, tv-series ]
    if: [ "str(now.year) + ')' not in title": reject ]
    regexp:
      reject_excluding: [ '\((?:XviD|DivX)\)' ]
      from: title
  bitmetv:
    # Ratio-based tracker; hard to maintain.
    priority: 7
    interval: 5 minutes
    delay: 10 minutes
    include: [ private/bitmetv-rss.yml ]
    preset: [ torrents, tv, tv-series ]

  #####################
  # TV series premieres
  #####################
  torrentvault_tv_premieres:
    priority: 22
    interval: 5 minutes
    include: [ private/torrentvault_tv-rss.yml ]
    preset: [ torrents, tv, tv-premieres ]
  btn_premieres:
    priority: 23
    interval: 5 minutes
    include: [ private/btn-rss.yml ]
    preset: [ torrents, tv, tv-premieres ]
    # Use the scene release name.
    manipulate:
      - title:
          replace:
            regexp: '^[^[]+\[ (\d+) \].*?\[ ([^]]+) \] *$'
            format: '\2 \1'
    if: [ "not title.endswith(str(now.year))": reject ]

  ########
  # Movies
  ########
  xspeeds_movies:
    priority: 31
    include: [ private/xspeeds_movies-rss.yml ]
    preset: [ torrents, movies ]
  ilt_movies:
    priority: 32
    include: [ private/ilt_movies-rss.yml ]
    preset: [ torrents, movies ]
  ptp:
    priority: 33
    include: [ private/ptp-rss.yml ]
    preset: [ torrents, movies ]
    regexp:
      reject_excluding: [ '- (?:XviD|DivX) / DVD / AVI /' ]
      from: title
    # Idea for new plugin:
    # ptp_lookup_leechtype: [ free, neutral, half ]
  rlslog:
    priority: 34
    rlslog: http://www.rlslog.net/category/movies/
    preset: [ torrents, movies ]
